/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Redis)
const userStates = new Map();

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function getState(userId) {
  return userStates.get(userId);
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function setState(userId, state) {
  userStates.set(userId, {
    ...state,
    updatedAt: Date.now()
  });
}

/**
 * –£–¥–∞–ª–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function clearState(userId) {
  userStates.delete(userId);
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
 */
function updateState(userId, data) {
  const currentState = getState(userId) || {};
  setState(userId, {
    ...currentState,
    ...data
  });
}

/**
 * –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π (–∑–∞–ø—É—Å–∫–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏)
 */
function cleanupOldStates(maxAgeMs = 30 * 60 * 1000) { // 30 –º–∏–Ω—É—Ç
  const now = Date.now();
  for (const [userId, state] of userStates.entries()) {
    if (now - state.updatedAt > maxAgeMs) {
      userStates.delete(userId);
    }
  }
}

// –û—á–∏—â–∞—Ç—å —Å—Ç–∞—Ä—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
setInterval(() => {
  cleanupOldStates();
  console.log(`üßπ –û—á–∏—â–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${userStates.size}`);
}, 10 * 60 * 1000);

module.exports = {
  getState,
  setState,
  clearState,
  updateState
};
