/**
 * PostgreSQL Database Connection
 */

const { Pool } = require('pg');

// –°–æ–∑–¥–∞–µ–º –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  // –ò–ª–∏ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 5432,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME,
  max: 20, // –º–∞–∫—Å–∏–º—É–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –ø—É–ª–µ
  idleTimeoutMillis: 30000,
  connectionTimeoutMillis: 2000,
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—É–ª–∞
pool.on('error', (err) => {
  console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ PostgreSQL:', err);
});

/**
 * –í—ã–ø–æ–ª–Ω–∏—Ç—å SQL –∑–∞–ø—Ä–æ—Å
 */
async function query(text, params) {
  const start = Date.now();
  try {
    const res = await pool.query(text, params);
    const duration = Date.now() - start;
    console.log(`üìä SQL –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${duration}ms:`, text.substring(0, 50));
    return res;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ SQL –∑–∞–ø—Ä–æ—Å–∞:', error);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –ø—É–ª–∞ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
 */
async function getClient() {
  const client = await pool.connect();
  const query = client.query;
  const release = client.release;

  // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º release –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  client.release = () => {
    client.query = query;
    client.release = release;
    return release.apply(client);
  };

  return client;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
 */
async function healthCheck() {
  try {
    const result = await query('SELECT NOW()');
    console.log('‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω:', result.rows[0].now);
    return true;
  } catch (error) {
    console.error('‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    return false;
  }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î (–≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ö–µ–º—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
 */
async function initialize() {
  try {
    await healthCheck();
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î:', error);
    throw error;
  }
}

/**
 * –ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
 */
async function close() {
  await pool.end();
  console.log('üì¥ –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å PostgreSQL –∑–∞–∫—Ä—ã—Ç—ã');
}

module.exports = {
  query,
  getClient,
  healthCheck,
  initialize,
  close,
  pool
};
