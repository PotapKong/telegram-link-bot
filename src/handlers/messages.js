/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 */

const userStates = require('../bot/state');
const {
  extractTelegramLink,
  extractLinkFromForwarded,
  makeShareLink
} = require('../utils/linkUtils');

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 */
async function handleMessage(bot, msg) {
  try {
    const chatId = msg.chat.id;
    const state = userStates.get(chatId);

    if (!state) return;

    if (state.step === 'waiting_link') {
      await handleWaitingLink(bot, msg, chatId);
    } else if (state.step === 'waiting_desc') {
      await handleWaitingDescription(bot, msg, chatId, state);
    }
  } catch (error) {
    console.error('Error handling message:', error);
    try {
      await bot.sendMessage(
        msg.chat.id,
        '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.'
      );
    } catch (err) {
      console.error('Failed to send error message:', err);
    }
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —ç—Ç–∞–ø–∞ –æ–∂–∏–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
 */
async function handleWaitingLink(bot, msg, chatId) {
  let link = null;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π
  if (msg.text && msg.text.includes('t.me/')) {
    link = extractTelegramLink(msg.text);
  }
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  else if (msg.forward_from_chat || msg.forward_from_message_id) {
    link = extractLinkFromForwarded(msg);
  }

  if (!link) {
    await bot.sendMessage(
      chatId,
      '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel.'
    );
    return;
  }

  userStates.set(chatId, { step: 'waiting_desc', link });
  await bot.sendMessage(
    chatId,
    `‚úÖ –°—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\nüìù –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–π —Å—Å—ã–ª–∫–∏:`
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —ç—Ç–∞–ø–∞ –æ–∂–∏–¥–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
 */
async function handleWaitingDescription(bot, msg, chatId, state) {
  const description = msg.text || '';
  const shareLink = makeShareLink(state.link, description);

  await bot.sendMessage(
    chatId,
    `‚ú® –ì–æ—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞:\n\n${shareLink}\n\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /link –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–∏.`
  );

  userStates.delete(chatId);
}

module.exports = {
  handleMessage
};
