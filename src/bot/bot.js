/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞
 */

const TelegramBot = require('node-telegram-bot-api');
const config = require('../config/config');

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config.validate();

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new TelegramBot(config.botToken, { polling: true });

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—à–∏–±–æ–∫
 */
function setupErrorHandlers() {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ polling
  bot.on('polling_error', (error) => {
    console.error('Polling error:', error.code, error.message);
  });

  // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
  process.on('uncaughtException', (error) => {
    console.error('Uncaught Exception:', error);
    process.exit(1);
  });

  process.on('unhandledRejection', (reason, promise) => {
    console.error('Unhandled Rejection at:', promise, 'reason:', reason);
  });

  // Graceful shutdown
  process.on('SIGINT', () => {
    console.log('Received SIGINT, stopping bot...');
    bot.stopPolling();
    process.exit(0);
  });

  process.on('SIGTERM', () => {
    console.log('Received SIGTERM, stopping bot...');
    bot.stopPolling();
    process.exit(0);
  });
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
 */
async function initBot() {
  setupErrorHandlers();

  try {
    const botInfo = await bot.getMe();
    console.log('‚úÖ Bot started successfully!');
    console.log(`üì± Username: @${botInfo.username}`);
    console.log(`üÜî Bot ID: ${botInfo.id}`);
    console.log('üöÄ Ready to receive messages...');
  } catch (error) {
    console.error('‚ùå Failed to get bot info:', error);
    process.exit(1);
  }
}

module.exports = { bot, initBot };
